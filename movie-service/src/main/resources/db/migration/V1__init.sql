-- Возрастной рейтинг
CREATE TYPE age_rating AS ENUM ('ZERO', 'SIX', 'TWELVE', 'SIXTEEN', 'EIGHTEEN');

-- Фильмы
CREATE TABLE IF NOT EXISTS movies (
    -- Идентификатор
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    -- Наименование
    name VARCHAR(100) NOT NULL,
    -- Описание
    description TEXT NOT NULL,
    -- Продолжительность
    duration INT NOT NULL,
    -- Год выхода
    year INT NOT NULL,
    -- Возрастной рейтинг
    rating age_rating NOT NULL,
    -- В прокате
    rental BOOLEAN NOT NULL,
    -- Кто создал запись
    created_by VARCHAR(100) NOT NULL,
    -- Дата и время создания записи
    created_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -- Кто обновил запись
    updated_by VARCHAR(100) NOT NULL,
    -- Дата и время обновления записи
    updated_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Жанры
CREATE TABLE IF NOT EXISTS genres (
    -- Идентификатор
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    -- Наименование
    name VARCHAR(50) NOT NULL,
    -- Кто создал запись
    created_by VARCHAR(100) NOT NULL,
    -- Дата и время создания записи
    created_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -- Кто обновил запись
    updated_by VARCHAR(100) NOT NULL,
    -- Дата и время обновления записи
    updated_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Соединение фильмов и жанров
CREATE TABLE IF NOT EXISTS movies_genres (
    -- Идентификатор фильма
    movie_id BIGINT NOT NULL,
    -- Идентификатор жанра
    genre_id BIGINT NOT NULL,
    PRIMARY KEY (movie_id, genre_id),
    FOREIGN KEY (movie_id) REFERENCES movies(id),
    FOREIGN KEY (genre_id) REFERENCES genres(id)
);

-- Соединение фильмов и стран
CREATE TABLE IF NOT EXISTS movies_countries(
    -- Идентификатор
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    -- Идентификатор фильма
    movie_id BIGINT NOT NULL REFERENCES movies(id) ON DELETE CASCADE,
    -- Идентификатор страны
    country_code VARCHAR(100) NOT NULL,
    -- Кто создал запись
    created_by VARCHAR(100) NOT NULL,
    -- Дата и время создания записи
    created_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -- Кто обновил запись
    updated_by VARCHAR(100) NOT NULL,
    -- Дата и время обновления записи
    updated_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Позиция участника фильма
CREATE TYPE participant_position AS ENUM ('DIRECTOR', 'ACTOR');

-- Соединение фильмов и участников с их позициями в фильме
CREATE TABLE IF NOT EXISTS movies_participants(
    -- Идентификатор
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    -- Идентификатор фильма
    movie_id BIGINT NOT NULL REFERENCES movies(id) ON DELETE CASCADE,
    -- Идентификатор участника
    participant_id BIGINT NOT NULL,
    position participant_position NOT NULL,
    -- Кто создал запись
    created_by VARCHAR(100) NOT NULL,
    -- Дата и время создания записи
    created_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    -- Кто обновил запись
    updated_by VARCHAR(100) NOT NULL,
    -- Дата и время обновления записи
    updated_date TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);